{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/Fish.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","Fish","_this$props$details","details","image","desc","src","alt","disabled","addToOrder","index","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","console","log","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.a0346af9.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {getFunName} from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n    myInput = React.createRef();\r\n    static propTypes = {\r\n        history: PropTypes.object,\r\n    };\r\n\r\n    goToStore = (event) => {\r\n        event.preventDefault(); // Stop the form from Submitting\r\n        const storeName = this.myInput.current.value;//Get the text from the input \r\n        this.props.history.push(`/store/${storeName}`);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className = 'store-selector' onSubmit = {this.goToStore}>\r\n                <h2>Please enter a store</h2>\r\n                <input \r\n                    type = \"text\"\r\n                    ref = {this.myInput} \r\n                    required \r\n                    placeholder = \"Store Name\" \r\n                    defaultValue = {getFunName()}>\r\n                </input>\r\n                <button type = \"submit\" >Visit Store -></button>\r\n            </form> \r\n        )\r\n    }\r\n}\r\n \r\nexport default StorePicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = props => (\r\n    <header className = \"top\">\r\n        <h1>\r\n            Catch\r\n            <span className = \"ofThe\">\r\n                <span className = \"of\">of</span>\r\n                <span className = \"the\">the</span>\r\n            </span>\r\n            Day\r\n        </h1>\r\n        <h3 className = \"tagline\">\r\n            <span>{props.tagline}</span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n};\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func,\r\n    }\r\n\r\n    renderOrder = key => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === \"available\";\r\n        const transitionOptions = {\r\n            classNames: \"order\",\r\n            key,\r\n            timeout: { enter: 500, exit: 500 }\r\n        };\r\n        // Make sure the fish is loaded before we continue\r\n        if(!fish) return null;\r\n\r\n        if( !isAvailable ) {\r\n            return ( \r\n                <CSSTransition {...transitionOptions}>\r\n                    <li key = {key}>\r\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\r\n                    </li>;\r\n                </CSSTransition>\r\n            );\r\n        }\r\n        return (\r\n            <CSSTransition {...transitionOptions}>\r\n                <li key = {key}>\r\n                    <span>\r\n                        <TransitionGroup component = \"span\" className = \"count\">\r\n                            <CSSTransition\r\n                                classNames = \"count\"\r\n                                key = {count}\r\n                                timeout = {{ enter: 500, exit: 500}}\r\n                            >\r\n                                <span>{count}</span>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                        lbs {fish.name}\r\n                        {formatPrice(count * fish.price)}\r\n                        <button onClick = {() => this.props.removeFromOrder(key)}>\r\n                            &times;\r\n                        </button>\r\n                    </span>    \r\n                </li>\r\n            </CSSTransition>\r\n        );\r\n    };\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n          const fish = this.props.fishes[key];\r\n          const count = this.props.order[key];\r\n          const isAvailable = fish && fish.status === \"available\";\r\n          if (isAvailable) {\r\n            return prevTotal + count * fish.price;\r\n          }\r\n          return prevTotal;\r\n        }, 0);\r\n        return (\r\n          <div className=\"order-wrap\">\r\n            <h2>Order</h2>\r\n            <TransitionGroup component=\"ul\" className=\"order\">\r\n                {orderIds.map(this.renderOrder)}\r\n            </TransitionGroup>\r\n            <div className=\"total\">\r\n              Total:\r\n              <strong>{formatPrice(total)}</strong>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default Order;","import React from \"react\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number,\r\n        }),\r\n        addToOrder: PropTypes.func,\r\n    }\r\n\r\n    render() {    \r\n        let { image, name, price, desc, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return (\r\n            <li className = \"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className = \"fish-name\">\r\n                    {name}\r\n                    <span className = \"price\">\r\n                        {formatPrice(price)}\r\n                    </span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled ={!isAvailable} onClick = {() => this.props.addToOrder(this.props.index)}>\r\n                    {isAvailable?\"Add to Cart!\":\"Sold Out!\"}\r\n                </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fish;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func,\r\n    }\r\n\r\n    createFish = event => {\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value,\r\n        };\r\n        this.props.addFish(fish);\r\n        // Reset the form\r\n        event.currentTarget.reset();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form className = \"fish-edit\" onSubmit = {this.createFish}>\r\n                <input  name = \"name\"  ref = {this.nameRef} placeholder = \"Name\" type = \"text\"/>\r\n                <input  name = \"price\" ref = {this.priceRef} placeholder = \"Price\" type = \"text\"/>\r\n                <select  name = \"status\" ref = {this.statusRef}>\r\n                    <option value = \"available\" >Fresh!</option>\r\n                    <option value = \"unavailable\" >Sold Out!</option>\r\n                </select>\r\n                <textarea  name = \"desc\" ref ={this.descRef} placeholder = \"desc\"/>\r\n                <input  name = \"image\" ref = {this.imageRef} placeholder = \"image\" type = \"text\"/>\r\n                <button type = \"submit\" >Add Fish</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number,\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func,\r\n    }\r\n\r\n    handleChange = event => {\r\n        // Update that fish\r\n        // 1. Take the copy of the current \r\n        const updatedFish = {\r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className = \"fish-edit\">\r\n                <input\r\n                    type = \"text\"\r\n                    name = \"name\"\r\n                    onChange = {this.handleChange}\r\n                    value = {this.props.fish.name}\r\n                />\r\n                <input\r\n                    type = \"text\"\r\n                    name = \"price\"\r\n                    onChange = {this.handleChange}\r\n                    value = {this.props.fish.price}\r\n                />\r\n                <select\r\n                    type = \"text\"\r\n                    name = \"status\"\r\n                    onChange = {this.handleChange}\r\n                    value = {this.props.fish.status}>\r\n                        <option value = \"available\"> Fresh!</option>\r\n                        <option value = \"unavailable\"> Sold Out !!</option>\r\n                </select>\r\n                <textarea \r\n                    name = \"desc\" \r\n                    onChange = {this.handleChange} \r\n                    value = {this.props.fish.desc}\r\n                />\r\n                <input \r\n                    type = \"text\" \r\n                    name = \"image\" \r\n                    onChange = {this.handleChange} \r\n                    value = {this.props.fish.image}\r\n                />\r\n                <button onClick= {() => this.props.deleteFish(this.props.index)}>\r\n                    Remove Fish\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EditFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = props => (\r\n    <nav className = \"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button\r\n            className = \"github\" \r\n            onClick = {() => props.authenticate(\"Github\")}>\r\n            Log in with Github\r\n        </button>\r\n        <button\r\n            className = \"twitter\" \r\n            onClick = {() => props.authenticate(\"Twitter\")}>\r\n            Log in with Twitter\r\n        </button>\r\n        <button\r\n            className = \"facebook\" \r\n            onClick = {() => props.authenticate(\"Facebook\")}>\r\n            Log in with Facebook\r\n        </button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp ({\r\n    apiKey: \"AIzaSyCNMq_w2gRoUyHJPwUxzb7aCzp6YSjfXEE\",\r\n    authDomain: \"catch-of-the-day-abhinav.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-abhinav.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is a named export\r\nexport { firebaseApp };\r\n\r\n// this is a default export\r\nexport default base;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func,\r\n    };\r\n    \r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({ user });\r\n            }\r\n        });\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        // 1. Look up the current store in firebase database\r\n        const store = await base.fetch(this.props.storeId, { context:this });\r\n        // 2. Claim it if there is no owner.\r\n        console.log(store);\r\n        if(!store.owner) {\r\n            // Save it as your own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            });\r\n        }\r\n        // 3. Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        });\r\n    };\r\n\r\n    authenticate = provider => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        // Firebase auth is used to set the connection of the application with Authentication section of Firebase\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    };\r\n\r\n    logout = async() => {\r\n        console.log(\"Logging out!\");\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null });\r\n    };\r\n\r\n    render() {\r\n\r\n        const logout = <button onClick ={this.logout}>Logout!</button>\r\n        // 1. Check if the user is logged in\r\n        if( !this.state.uid ) {\r\n            return <Login authenticate = {this.authenticate}/>\r\n        }\r\n        // 2. Check if they are not the owner of the store\r\n        if(this.state.uid !== this.state.owner){\r\n            return (\r\n                <div>\r\n                    <p>\r\n                    Sorry, you are not the owner!\r\n                    {logout}\r\n                    </p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // 3. They must be the owner just render the inventory\r\n        return (\r\n            <div className = \"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => (\r\n                    <EditFishForm \r\n                        key = {key}\r\n                        index = {key}\r\n                        fish = {this.props.fishes[key]} \r\n                        updateFish = {this.props.updateFish}\r\n                        deleteFish = {this.props.deleteFish}\r\n                    />\r\n                ))}\r\n                <AddFishForm addFish = {this.props.addFish}/>\r\n                <button onClick = {this.props.loadSampleFishes}>\r\n                    Load Sample Fishes \r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyones favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport  Header from \"./Header\";\r\nimport  Order from \"./Order\";\r\nimport  Fish from \"./Fish\";\r\nimport  Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {params} = this.props.match;\r\n        // First reinstate our local storage\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n        if(localStorageRef) {\r\n            this.setState({ order :  JSON.parse(localStorageRef) });\r\n        }\r\n\r\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: \"fishes\"\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem(this.props.match.params.storeId,JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    addFish = fish => {\r\n        // 1. Take a copy of existing state.\r\n        const fishes = { ...this.state.fishes };\r\n        // 2. Add our new fish to that fishes variable.\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        // 3. Set the new fishes object to state.\r\n        this.setState({\r\n            fishes : fishes\r\n        });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        // 1. Take a copy of current state\r\n        const fishes = {...this.state.fishes};\r\n        //  2. Update that state\r\n        fishes[key] = updatedFish;\r\n        // Set the state \r\n        this.setState({fishes});\r\n    };\r\n\r\n    deleteFish = (key) => {\r\n        // 1. Take a copy of state\r\n        const fishes = {...this.state.fishes};\r\n        // 2. Update/Delete the state\r\n        fishes[key] = null;\r\n        // 3. Set the new state\r\n        this.setState({fishes});\r\n    }\r\n\r\n    addToOrder = key => {\r\n        // 1. take a copy of exiting state.\r\n        const order = { ...this.state.order };\r\n        // 2. Either add to order or update the number in our order.\r\n        order[key] = order[key] + 1 || 1;\r\n        // Set the state.\r\n        this.setState({order});\r\n    }\r\n\r\n    removeFromOrder = key => {\r\n        // 1. Take a copy of existing state.\r\n        const order = {...this.state.order};\r\n        // 2. Delete from the order state.\r\n        delete order[key];\r\n        // 3. Set the state.\r\n        this.setState({order});\r\n    };\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({fishes : sampleFishes});\r\n    };\r\n\r\n    render() {  \r\n        return (\r\n            <div className = \"catch-of-the-day\">\r\n                <div className = \"menu\">\r\n                    <Header tagline = \"Fresh Seafood Market\"/>\r\n                    <ul className = \"fishes\">\r\n                        {Object.keys(this.state.fishes).map(key => (\r\n                            <Fish \r\n                                key = {key}\r\n                                index = {key} \r\n                                details = {this.state.fishes[key]}\r\n                                addToOrder = {this.addToOrder}>\r\n                            </Fish>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <Order \r\n                    fishes = {this.state.fishes} \r\n                    order = {this.state.order} \r\n                    removeFromOrder = {this.removeFromOrder}\r\n                />\r\n                <Inventory \r\n                    addFish = {this.addFish}\r\n                    updateFish = {this.updateFish}\r\n                    deleteFish = {this.deleteFish}\r\n                    loadSampleFishes = {this.loadSampleFishes}\r\n                    fishes = {this.state.fishes}\r\n                    storeId = {this.props.match.params.storeId}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\n\r\nconst NotFound = () => (<div>\r\n    <h2>NOT FOUND!!!!!!!</h2>\r\n</div> )   ;             \r\n\r\n  \r\n    \r\n \r\nexport default NotFound;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\nimport React from \"react\";\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path = \"/\" component = {StorePicker} />\r\n            <Route path = \"/store/:storeId\" component = {App} />\r\n            <Route component = {NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","\r\nimport React from 'react';\r\nimport { render } from 'react-dom'; \r\nimport Router from './components/Router'; \r\nimport \"./css/style.css\";\r\n\r\nrender(< Router />, document.querySelector('#main'));"],"sourceRoot":""}